buildscript {
    ext {
        springBootVersion = "2.2.2.RELEASE"
        kotlinVersion = "1.3.61"
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
    }
}

//plugins {
//    id('maven-publish')
//}

apply plugin: 'kotlin'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'maven'
apply plugin: 'maven-publish'

jar.enabled = true
bootJar.enabled = false

group 'com.github.i978sukhoi'
version '0.0.1-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation('org.jetbrains.kotlin:kotlin-stdlib-jdk8')
//    api('javax.jms:javax.jms-api')
//    implementation('org.springframework.boot:spring-boot')
//    implementation('org.springframework:spring-jms')
//    implementation('io.github.microutils:kotlin-logging:1.7.8')
    implementation('org.springframework.boot:spring-boot-starter-activemq')
//    implementation('org.springframework.boot:spring-boot-starter-integration')
//    implementation('org.springframework.integration:spring-integration-jms')
//    implementation('com.fasterxml.jackson.module:jackson-module-kotlin')

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

task sourcesJar(type: Jar) {
    classifier 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/i978sukhoi/spring-activemq-sharer")
            credentials {
//                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                username = "i978sukhoi"
//                password = project.findProperty("gpr.key") ?: System.getenv("PASSWORD")
                password = ""
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }
}
